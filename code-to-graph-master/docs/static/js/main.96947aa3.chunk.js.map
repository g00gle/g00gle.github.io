{"version":3,"sources":["attina.js","editor.js","App.js","serviceWorker.js","index.js"],"names":["getDiagram","title","input","callback","mermaidAPI","initialize","startOnLoad","parseError","err","hash","render","diagram","e","console","log","Attina","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","__html","_this2","_ref","setState","nextProps","nextState","_this3","_ref2","react_default","a","createElement","Fragment","onClick","blob","Blob","document","getElementsByClassName","innerHTML","type","FileSaver","saveAs","style","color","borderRadius","border","outline","backgroundColor","flexBasis","flexShrink","flexGrow","width","minHeight","zIndex","index_es","icon","faDownload","status","dangerouslySetInnerHTML","className","objectSpread","display","alignItems","justifyContent","React","Component","defaultProps","frameBorder","getCodeFromLocation","location","search","codeBase64","queryString","parse","code","Base64","decode","App","onDrop","acceptedFiles","rejectedFiles","forEach","file","reader","FileReader","onload","fileAsBinaryString","result","handleChange","onabort","onerror","readAsBinaryString","source","error","bind","assertThisInitialized","handleSubmitDirect","handleSubmit","debounce","newValue","base64Result","encodeURI","history","push","concat","setTimeout","transformJsStringToMermaidString","es","getRootProps","getInputProps","isDragActive","inputProps","assign","undefined","flexDirection","height","flexWrap","position","fontSize","left","right","top","bottom","lib_default","mode","theme","onChange","name","editorProps","$blockScrolling","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","marginRight","faUpload","fontWeight","marginLeft","alignSelf","faPlay","faSpinner","spin","attina","copy","debug","message","faShareSquare","wrapEnabled","readOnly","GithubCorner_default","href","svgStyle","BrowserRouter","Route","component","Editor","Boolean","window","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96947aa3.chunk.js","sourcesContent":["import React from \"react\";\nimport { mermaidAPI } from \"mermaid\";\nimport FileSaver from \"file-saver\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\n\n// import debounce from \"lodash/fp/debounce\";\n// mermaidAPI.initialize({\n//   startOnLoad: true,\n//   logLevel: 1\n// });\n\nfunction getDiagram(title, input, callback) {\n  try {\n    mermaidAPI.initialize({\n      startOnLoad: true\n    });\n\n    mermaidAPI.parseError = function(err, hash) {\n      // console.log(\"parseError\");\n      // console.log(err.messsage);\n    };\n    // console.log(\"Rendering\");\n    // console.log(input);\n    // mermaidAPI.render(title, \"graph TB;Loading;\", diagram => {\n    //   console.log(\"Rendered\");\n    //   setTimeout(\n    //     () =>\n    //       mermaidAPI.render(title, input, diagram => {\n    //         console.log(\"Rendered\");\n    //         console.log(diagram);\n    //         callback(diagram);\n    //       }),\n    //     200\n    //   );\n    // });\n\n    mermaidAPI.render(title, input, diagram => {\n      // console.log(\"Rendered\");\n      // console.log(diagram);\n      callback({ diagram, input });\n    });\n  } catch (e) {\n    console.log(\"Failed to generate diagram\");\n    console.log(e);\n  }\n}\n\nclass Attina extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      diagram: {\n        __html: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    getDiagram(this.props.title, this.props.diagram, ({ diagram, input }) => {\n      this.setState({ diagram: { __html: diagram }, input });\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.diagram !== this.props.diagram) {\n      getDiagram(this.props.title, nextProps.diagram, ({ diagram, input }) => {\n        this.setState({ diagram: { __html: diagram }, input });\n      });\n\n      return false;\n    }\n    if (nextState.diagram !== this.state.diagram) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => {\n            var blob = new Blob(\n              [\n                document.getElementsByClassName(\"mermaid-code-to-graph\")[0]\n                  .innerHTML\n              ],\n              {\n                type: \"image/svg+xml;charset=utf-8\"\n              }\n            );\n            FileSaver.saveAs(blob, \"graph.svg\");\n          }}\n          style={{\n            color: \"white\",\n            // fontSize: \"1.2em\",\n            borderRadius: \"0\",\n            border: \"none\",\n            outline: \"none\",\n            backgroundColor: \"#FF44FF\",\n            flexBasis: \"30px\",\n            flexShrink: 0,\n            flexGrow: 1,\n            width: \"100%\",\n            minHeight: \"30px\",\n            zIndex: 1\n          }}\n        >\n          <FontAwesomeIcon icon={faDownload} />\n          {\"    \"} {\"    \"}\n          {this.state.status !== \"loading\"\n            ? \"Download SVG File\"\n            : \"Download SVG File\"}\n        </button>\n        <div\n          dangerouslySetInnerHTML={this.state.diagram}\n          className={\"mermaid-code-to-graph\"}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            ...this.props.style\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nAttina.defaultProps = {\n  title: \"diagram\",\n  frameBorder: 0\n};\n\nexport default Attina;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Attina from \"./attina\";\nimport debounce from \"lodash/fp/debounce\";\nimport { transformJsStringToMermaidString } from \"code-to-graph\";\nimport copy from \"copy-to-clipboard\";\n\nimport brace from \"brace\";\nimport AceEditor from \"react-ace\";\nimport Dropzone from \"react-dropzone\";\n\nimport \"brace/mode/javascript\";\nimport \"brace/mode/text\";\nimport \"brace/snippets/javascript\";\nimport \"brace/theme/github\";\nimport \"brace/theme/monokai\";\nimport \"brace/ext/language_tools\";\nimport \"brace/ext/searchbox\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSpinner,\n  faPlay,\n  faShareSquare,\n  faUpload\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Base64 } from \"js-base64\";\n\nimport queryString from \"query-string\";\n\nconst getCodeFromLocation = ({ location }) => {\n  try {\n    // console.log(\"code\");\n    const search = location.search;\n    // console.log(search);\n    const params = queryString.parse(search);\n    // console.log(params);\n    const codeBase64 = params.code;\n    // console.log(codeBase64);\n    const code = Base64.decode(codeBase64);\n    // console.log(code);\n    return { code: code };\n  } catch (e) {\n    console.log(\"Using default code\");\n    return {\n      code: `const myFunction = (x) => {\n  if(x>0){\n    return \"ok\"\n  } else {\n    throw \"not ok\"\n  }\n}`\n    };\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      source: `graph TB; Init;`,\n      error: null,\n      status: \"init\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitDirect = this.handleSubmitDirect.bind(this);\n    this.handleSubmit = debounce(200, this.handleSubmitDirect).bind(this);\n  }\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // console.log(\"drop\", acceptedFiles, rejectedFiles);\n\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const fileAsBinaryString = reader.result;\n        this.handleChange(fileAsBinaryString);\n      };\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n\n      reader.readAsBinaryString(file);\n    });\n  };\n\n  handleChange(newValue) {\n    const base64Result = Base64.encodeURI(newValue);\n    this.props.history.push(`./?code=${base64Result}`);\n    this.handleSubmit();\n  }\n\n  handleSubmitDirect() {\n    setTimeout(() => {\n      const { code } = getCodeFromLocation({ location: this.props.location });\n      this.setState(\n        {\n          source: `graph TB; Loading;`,\n          status: \"loading\"\n        },\n        () => {\n          setTimeout(() => {\n            try {\n              const source = transformJsStringToMermaidString(code);\n              this.setState({\n                source: source,\n                status: \"loaded\",\n                error: null\n              });\n            } catch (error) {\n              this.setState({\n                status: \"error\",\n                error: error\n              });\n            }\n          }, 0);\n        }\n      );\n    }, 0);\n  }\n\n  componentDidMount() {\n    try {\n      const { code } = getCodeFromLocation({ location: this.props.location });\n      this.handleChange(code);\n    } catch (error) {\n      this.setState({\n        status: \"error\",\n        error: error\n      });\n    }\n  }\n\n  render() {\n    const { code } = getCodeFromLocation({ location: this.props.location });\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({ getRootProps, getInputProps, isDragActive }) => {\n          const inputProps = getInputProps();\n          // console.log(inputProps);\n          return (\n            <div\n              {...getRootProps()}\n              onClick={undefined}\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                height: \"100vh\",\n                alignItems: \"stretch\",\n\n                flexWrap: \"wrap\"\n              }}\n            >\n              {isDragActive ? (\n                <div\n                  style={{\n                    position: \"absolute\",\n                    color: \"white\",\n                    fontSize: \"2em\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    backgroundColor: \"rgba(0,0,0,0.8)\",\n                    zIndex: 99999\n                  }}\n                >\n                  Drop file anywhere\n                </div>\n              ) : null}\n              <div\n                style={{\n                  flexBasis: \"50%\",\n                  flexShrink: 1,\n                  flexGrow: 1,\n                  height: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"stretch\",\n                  justifyContent: \"stretch\"\n                }}\n              >\n                <AceEditor\n                  mode=\"javascript\"\n                  theme=\"monokai\"\n                  onChange={this.handleChange}\n                  name=\"code-ace-editor\"\n                  editorProps={{ $blockScrolling: true }}\n                  value={code}\n                  style={{\n                    flexBasis: \"100vh\",\n                    flexShrink: 1,\n                    flexGrow: 1,\n                    width: \"100%\"\n                    // height: \"100%\"\n                  }}\n                  setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true,\n                    showLineNumbers: true,\n                    tabSize: 2\n                  }}\n                />\n                <div\n                  style={{\n                    color: \"white\",\n                    // fontSize: \"1.2em\",\n                    borderRadius: \"0\",\n                    border: \"none\",\n                    outline: \"none\",\n                    backgroundColor: \"#FF44FF\",\n                    flexBasis: \"30px\",\n                    flexShrink: 0,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    flexGrow: 1,\n                    width: \"100%\",\n                    minHeight: \"30px\"\n                  }}\n                >\n                  <span style={{ fontSize: \"11px\", marginRight: \"1em\" }}>\n                    <FontAwesomeIcon\n                      icon={faUpload}\n                      style={{ flexShrink: 1, flexGrow: 1 }}\n                    />\n                    {\"   \"}\n                    Drop code files anywhere or\n                  </span>\n                  {\"   \"}\n                  <input\n                    {...inputProps}\n                    style={{\n                      color: \"white\",\n                      // fontSize: \"1.2em\",\n                      borderRadius: \"0\",\n                      border: \"none\",\n                      outline: \"none\",\n                      backgroundColor: \"#FF44FF\",\n                      flexBasis: \"fit-content\",\n                      flexShrink: 1,\n                      flexGrow: 0,\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\"\n                    }}\n                  />\n                </div>\n              </div>\n\n              <button\n                onClick={this.handleSubmitDirect}\n                style={{\n                  position: \"relative\",\n                  fontWeight: 600,\n                  outline: \"none\",\n                  color: \"white\",\n                  fontSize: \"1.2em\",\n                  borderRadius: \"100%\",\n                  border: \"none\",\n                  backgroundColor: \"#FF44FF\",\n                  width: 60,\n                  height: 60,\n                  marginLeft: -30,\n                  marginRight: -30,\n                  alignSelf: \"center\",\n                  zIndex: 9999\n                }}\n              >\n                {this.state.status !== \"loading\" ? (\n                  <FontAwesomeIcon icon={faPlay} />\n                ) : (\n                  <FontAwesomeIcon icon={faSpinner} spin />\n                )}\n              </button>\n              {this.state.error === null || this.state.error === undefined ? (\n                <div\n                  style={{\n                    flexBasis: \"50%\",\n                    flexShrink: 1,\n                    flexGrow: 0,\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  }}\n                >\n                  <Attina\n                    diagram={this.state.source}\n                    style={{ flexBasis: \"80%\", flexShrink: 1, flexGrow: 1 }}\n                  />\n                  <button\n                    onClick={() => {\n                      // Copy with options\n                      copy(\"```mermaid\\n\" + this.state.source + \"\\n```\", {\n                        debug: true,\n                        message: \"Press #{key} to copy\"\n                      });\n                      this.setState({ status: \"copied\" });\n                    }}\n                    style={{\n                      color: \"white\",\n                      // fontSize: \"1.2em\",\n                      borderRadius: \"0\",\n                      border: \"none\",\n                      outline: \"none\",\n                      backgroundColor: \"#FF44FF\",\n                      flexBasis: \"30px\",\n                      flexShrink: 0,\n                      flexGrow: 1,\n                      width: \"100%\",\n                      minHeight: \"30px\"\n                    }}\n                  >\n                    {this.state.status !== \"copied\" ? (\n                      <React.Fragment>\n                        <FontAwesomeIcon icon={faShareSquare} />\n                        {\"   \"}\n                        Copy graph code to clipboard\n                      </React.Fragment>\n                    ) : (\n                      \"Copied!\"\n                    )}\n                  </button>\n                  <AceEditor\n                    mode=\"text\"\n                    theme=\"github\"\n                    wrapEnabled={false}\n                    readOnly={true}\n                    name=\"result-ace-editor\"\n                    editorProps={{ $blockScrolling: true }}\n                    // onLoad={this.onLoad}\n                    // onSelectionChange={this.onSelectionChange}\n                    // onCursorChange={this.onCursorChange}\n                    // onValidate={this.onValidate}\n                    value={\"```mermaid\\n\" + this.state.source + \"\\n```\"}\n                    // fontSize={this.state.fontSize}\n                    // showPrintMargin={this.state.showPrintMargin}\n                    // showGutter={this.state.showGutter}\n                    // highlightActiveLine={this.state.highlightActiveLine}\n                    style={{\n                      flexBasis: \"20%\",\n                      flexShrink: 0,\n                      flexGrow: 0,\n                      width: \"100%\",\n                      height: \"20%\"\n                    }}\n                    setOptions={{\n                      enableBasicAutocompletion: false,\n                      enableLiveAutocompletion: false,\n                      enableSnippets: false,\n                      showLineNumbers: false,\n                      tabSize: 2\n                    }}\n                  />\n                </div>\n              ) : (\n                <div\n                  style={{\n                    flexBasis: \"50%\",\n                    flexShrink: 0,\n                    flexGrow: 0,\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\"\n                  }}\n                >\n                  <AceEditor\n                    mode=\"text\"\n                    theme=\"github\"\n                    readOnly={true}\n                    wrapEnabled={true}\n                    name=\"error-ace-editor\"\n                    editorProps={{ $blockScrolling: true }}\n                    // onLoad={this.onLoad}\n                    // onSelectionChange={this.onSelectionChange}\n                    // onCursorChange={this.onCursorChange}\n                    // onValidate={this.onValidate}\n                    value={this.state.error.message}\n                    // fontSize={this.state.fontSize}\n                    // showPrintMargin={this.state.showPrintMargin}\n                    // showGutter={this.state.showGutter}\n                    // highlightActiveLine={this.state.highlightActiveLine}\n                    style={{\n                      flexBasis: \"100%\",\n                      flexShrink: 0,\n                      flexGrow: 0,\n                      width: \"100%\",\n                      height: \"100%\",\n                      color: \"red\"\n                    }}\n                    setOptions={{\n                      enableBasicAutocompletion: false,\n                      enableLiveAutocompletion: false,\n                      enableSnippets: false,\n                      showLineNumbers: false,\n                      tabSize: 2\n                    }}\n                  />\n                </div>\n              )}\n            </div>\n          );\n        }}\n      </Dropzone>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Editor from \"./editor\";\nimport GithubCorner from \"react-github-corner\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <GithubCorner\n          href=\"https://github.com/crubier/code-to-graph\"\n          style={{ zIndex: 20 }}\n          svgStyle={{ zIndex: 20 }}\n        />\n        <Router>\n          <Route component={Editor} />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}